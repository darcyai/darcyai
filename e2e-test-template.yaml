jobs:
  - job: ${{ parameters.name }}
    workspace:
      clean: all
    pool: ${{ parameters.pool }}
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: dist
          patterns: '**/*.whl'
          path: $(System.DefaultWorkingDirectory)/dist
        displayName: 'Download artifacts'

      - script: |
          curl -L -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py
          python3 /tmp/get-pip.py --user

          apt-get install -y libcblas-dev libhdf5-dev libhdf5-serial-dev
          apt-get install -y libatlas-base-dev libjasper-dev libqtgui4 libqt4-test
        displayName: 'Install dependencies'

      - bash: |
          cd $(System.DefaultWorkingDirectory)/src/darcyai/integration_tests
          python3 -m pip install -r requirements.txt --user
          python3 -m pip install $(System.DefaultWorkingDirectory)/dist/darcyai*.whl --user

          python3 -u tests.py
        displayName: 'E2E test on macOS and Linux'
        condition: ne( variables['Agent.OS'], 'Windows_NT' )

      - powershell: |
          $matches = Get-Content setup.cfg -ErrorAction SilentlyContinue | Select-String '^current_version = (.*)'
          $version = $matches[0].Matches.Groups[1].Value
          Write-Host "Version: $version"

          cd $(System.DefaultWorkingDirectory)\src\darcyai\integration_tests
          python3 -m pip install -r requirements.txt --user

          python3 -m pip install $(System.DefaultWorkingDirectory)\dist\darcyai-$version-py3-none-any.whl --user

          python3 -u tests.py
        displayName: 'E2E test on Windows'
        condition: eq( variables['Agent.OS'], 'Windows_NT' )

      - bash: |
          sudo find $(Build.Repository.LocalPath) -name "__pycache__" -type d -exec /bin/rm -rf {} +
        displayName: 'Cleanup on macOS and Linux'
        condition: and(ne( variables['Agent.OS'], 'Windows_NT' ), always())
