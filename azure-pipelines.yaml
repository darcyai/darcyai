trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - main

variables:
  tagged: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]

stages:
  - stage: DarcyAI
    jobs:
      - job: DarcyAI
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          matrix:
            Build:
              python.version: '3.7'

        steps:
        - checkout: self
          persistCredentials: true
          clean: true
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'

        - script: |
            sudo echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | sudo tee /etc/apt/sources.list.d/coral-edgetpu.list
            sudo echo "deb https://packages.cloud.google.com/apt coral-cloud-stable main" | sudo tee /etc/apt/sources.list.d/coral-cloud.list
            sudo curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install -y python3-pycoral
            sudo apt-get clean
            sudo rm -rf /var/lib/apt/lists/*
            python -m pip install --extra-index-url https://google-coral.github.io/py-repo/ pycoral~=2.0
            python -m pip install --upgrade pip build
            python -m pip install -r ./requirements.txt
            python -m pip install pytest-azurepipelines pytest-cov
          displayName: 'Install dependencies'

        - script: |
            pylint --rcfile=.pylintrc --output-format=colorized --reports=n --score=n src/darcyai/
          displayName: 'Run pylint'

        - script: |
            pytest src/darcyai/tests -v --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
          displayName: 'Run unit tests'

        - task: PublishTestResults@2
          condition: succeededOrFailed()
          inputs:
            testResultsFiles: '**/test-*.xml'
            testRunTitle: 'Publish test results'
          displayName: 'Publish test results'

        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
          displayName: 'Publish code coverage'

        - script: |
            python3 -m build
          displayName: 'Artifact creation'

        - task: CopyFiles@2
          inputs:
            targetFolder: $(Build.ArtifactStagingDirectory)
          displayName: 'Copy files'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
            ArtifactName: 'dist'
            publishLocation: 'Container'
          displayName: 'Publish build artifacts'

      - template: e2e-test-template.yaml
        parameters:
          name: 'E2E_x86'
          poolImageName: 'Azure Pipelines'
          imageTag: 'dev'

      - template: e2e-test-template.yaml
        parameters:
          name: 'E2E_armv7l'
          poolImageName: 'RPi'
          imageTag: 'dev'
